Display dpf {
    Driver     'DPF'
    Port       'usb0'
    Font       '16x20'
    Foreground 'ffffff'
    Background '000000'
    Basecolor  '000000'
	Orientation 3          # Orientation value from 0-3
	Backlight  backlight   # Backlight variable control
}

Widget OS {
    class 'Text'
    expression '*** '.uname('sysname').' '.uname('release').' - OpenWrt Demo ***'
    width 62
    align 'M'
    speed 200
    update tick
    Background '008000'
    Foreground 'ffffff'
}

Widget CPU {
    class  'Text'
    expression  uname('machine')
    prefix 'CPU: '
    width  10
    align  'L'
    update tick
    Background 'FFFFFF00'
}


Widget RAM {
    class  'Text'
    expression meminfo('MemTotal')/1024
    postfix ' MB RAM'
    width  11
    precision 0
    align  'R'
    update tick
    Background 'FFFFFF00'
}

Widget Busy {
    class 'Text'
    expression proc_stat::cpu('busy', 500)
    prefix 'Busy'
    postfix '%'
    width 10
    precision 1
    align 'R'
    update tick
    Foreground 'ffffff'
    Background 'FFFFFF00'
}

Widget BusyBar {
    class 'Bar'
    expression  proc_stat::cpu('busy',   500)
    expression2 proc_stat::cpu('system', 500)
    length 21
    direction 'E'
    update tack
    Foreground 'ffffff'
    Background '00000080'
    BarColor0 '5f5fff'
    BarColor1 'ff5f5f'
}

Widget Load {
    class 'Text'
    expression loadavg(1)
    prefix 'Load'
    postfix loadavg(1)>1.0?'!':' '
    width 10
    precision 1
    align 'R'
    update tick
    Foreground 'ffffff'
    Background 'FFFFFF00'
}

Widget LoadBar {
    class 'Bar'
    expression  loadavg(1)
    max 2.0
    length 21
    direction 'E'
    update tack
    Foreground 'ffffff'
    Background '00000080'
    BarColor0 '5f5fff'
    BarColor1 'ff5f5f'
}


Widget Disk {
    class 'Text'
    # disk.[rw]blk return blocks, we assume a blocksize of 512
    # to get the number in kB/s we would do blk*512/1024, which is blk/2
    # expression (proc_stat::disk('.*', 'rblk', 500)+proc_stat::disk('.*', 'wblk', 500))/2
    # with kernel 2.6, disk_io disappeared from /proc/stat but moved to /proc/diskstat
    # therefore you have to use another function called 'diskstats':
    expression diskstats('hd.', 'read_sectors', 500) + diskstats('hd.', 'write_sectors', 500)
    prefix 'disk'
    postfix ' '
    width 10
    precision 0
    align 'R'
    update tick
    Foreground 'ffffff'
    Background 'FFFFFF00'
}

Widget DiskBar {
    class 'Bar'
    #expression  proc_stat::disk('.*', 'rblk', 500)
    #expression2 proc_stat::disk('.*', 'wblk', 500)
    # for kernel 2.6:
    expression  diskstats('sd.', 'read_sectors',  500)
    expression2 diskstats('sd.', 'write_sectors', 500)
    length 21
    direction 'E'
    update tack
    Foreground 'ffffff'
    Background '00000080'
    BarColor0 '5f5fff'
    BarColor1 'ff5f5f'
}

Widget Eth0 {
    class 'Text'
    expression (netdev('wlan1', 'Rx_bytes', 500)+netdev('wlan1', 'Tx_bytes', 500))/1024
    prefix 'wlan1'
    postfix ' '
    width 10
    precision 0
    align 'R'
    update tick
    Foreground 'ffffff'
    Background 'FFFFFF00'
}

Widget Eth0Bar {
    class 'Bar'
    expression  netdev('wlan1', 'Rx_bytes', 500)
    expression2 netdev('wlan1', 'Tx_bytes', 500)
    length 21
    direction 'E'
    update tack
    Foreground 'ffffff'
    Background '00000080'
    BarColor0 '5f5fff'
    BarColor1 'ff5f5f'
}

Widget Uptime {
    class 'Text'
    expression uptime('%d days %H:%M:%S')
    width 20
    align 'R'
    prefix 'Up: '
    update 1000
    Background 'FFFFFF00'
}

Widget Bgnd {
    class 'Image'
    file 'bgnd.png'
    reload 1
    update 5000
    inverted 0
    visible 1
}

Widget SSID {
    class 'Text'
    expression wifi::essid('wlan1')
    width 20
    align 'R'
    prefix 'SSID: '
    update 1000
    Background 'ffffff00'
}

Widget Password {
    class 'Text'
    expression exec('grep key /etc/config/wireless -m1 | cut -d "\'" -f2', 1000) 
    #expression exec('uci get wireless.@wifi-iface[1].key', 1000)
    width 20
    prefix 'Geslo: '
    align 'R'
    update 1000
}

Widget PassNotice {
    class 'Text'
    expression 'Novo geslo na 24h ali'
    width 28 
    align 'L'
    #speed 200
    Foreground 'ffffff00'
    Background '008000'
}

Widget PassNotice2 {
    class 'Text'
    expression 'i ob pritisku gumba.'
    width 28
    align 'L'
    Foreground 'ffffff00'
    Background '008000'
                            

}

Widget AssocCount{
    class 'Text'
    expression exec('iw dev wlan1 station dump | grep Station | wc -l', 1000)
    width 20
    prefix 'st. klientov: '
    align 'L'
    update 5000
}

Display 'DPF'

Layout mylayout {
    Row01.Col01 'OS'
    Row02.Col01 'CPU'
    Row02.Col10 'RAM'
    Row05.Col01 'Busy'
    Row06.Col01 'BusyBar'
    Row07.Col01 'Load'
    Row08.Col01 'LoadBar'
    Row09.Col01 'Eth0'
    Row10.Col01 'Eth0Bar'
    Row12.Col01 'Uptime'
    Row13.Col01 'SSID'
    Row14.Col01 'Password'
    #Layer 2 {
    #    X1.Y1 'Bgnd'
    #}
}

Layout mylayout2 {
    Row02.Col01 'SSID'
    Row03.Col01 'Password'
    Row05.Col01 'PassNotice'
    Row06.Col01 'PassNotice2'
    Row08.Col01 'Eth0'
    Row09.Col01 'Eth0Bar'
    Row10.Col01 'AssocCount'
    Row12.Col01 'Uptime'
}

Layout 'mylayout2'
#Layout 'mylayout'

Variables {
	backlight 7 
    tick 1000
    tack 200
    minute 60000
}

